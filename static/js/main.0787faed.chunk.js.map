{"version":3,"sources":["game/algorithm.js","game/config.js","mainPage/main.js","sounds/win.mp3","popup/popup.js","sounds/bckgrnd.mp3","sounds/err.mp3","assets/backgr1.jpg","assets/backgr2.jpg","assets/backgr3.jpg","game/time.js","game/field.js","header/header.js","footer/rs_school_js.svg","footer/footer.js","settings/settings.js","score/scoretable.js","score/score.js","App.js","index.js"],"names":["size","difficult","sudokuArray","sudokuAns","createSudoku","s","d","parseInt","prefill","Array","keys","map","x","String","fromCharCode","toString","a","b","i","length","push","j","k","startAgian","itteration","Math","floor","random","transpose","switchBigRow","switchRow","counter","c","row","cell","voider","sortSudoku","createBasicSudoku","memArray","col","firstRowArray","diff","memRow","number","timeTime","config","ConfigContext","React","createContext","useConfig","useContext","ConfigProvider","time","children","useState","soundVolume","setSoundVolume","musicVolume","setMusicVolume","timerOn","setTimerOn","timer","setTimer","setSize","setDifficult","color","setColor","backgr","setBackgr","load","setLoad","Provider","value","soundHandler","sound","volume","play","musicHandler","music","theTimer","clearInterval","min","sec","localStorage","JSON","parse","setInterval","stringify","Main","theme","createMuiTheme","palette","primary","green","red","blue","yellow","className","to","ThemeProvider","Button","variant","onClick","disabled","removeItem","Popup","winSound","Audio","src","wnSound","name","setName","onChange","event","target","score","winner","sort","Time","ans","bckgrSound","bckgrSnd","errSound","Field","setCol","rw","setRw","win","setWin","backgroundStyle","backgroundImage","bckgr1","bckgr2","bckgr3","backgroundSize","backgroundPosition","width","height","display","justifyContent","styles","sudokuCell","fontSize","border","inputCell","clickHandler","column","inputHandler","substr","retArr","useEffect","style","ind","index","type","bind","erSound","useStyles","makeStyles","list","textDecoration","fullList","Header","classes","top","state","setState","clickHandlr","anchor","headerStyle","backgroundColor","toggleDrawer","open","key","Fragment","Drawer","onClose","clsx","role","onKeyDown","List","text","ListItem","button","ListItemIcon","ListItemText","props","href","Rslogo","root","alignItems","Settings","FormControl","component","Typography","id","gutterBottom","RadioGroup","aria-label","FormControlLabel","control","Radio","label","Grid","container","spacing","item","xs","Slider","newValue","aria-labelledby","scrbrd","scoreboard","App","basename","path","exact","Score","application","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0787faed.chunk.js","sourcesContent":["let sudokuArray = [],\r\n  sudokuAns = [];\r\n\r\nlet size, difficult;\r\n\r\nfunction createSudoku(s, d) {\r\n  size = parseInt(s, 10);\r\n  difficult = parseInt(d, 10);\r\n  sudokuAns = [];\r\n  sudokuArray = [];\r\n  createBasicSudoku();\r\n}\r\nfunction createBasicSudoku() {\r\n  let prefill = [...Array(size ** 2).keys()].map((x) => {\r\n    x++;\r\n    if (x > 9) {\r\n      return String.fromCharCode(x + 55);\r\n    }\r\n    return x.toString();\r\n  });\r\n  let a = 0,\r\n    b = -1;\r\n  for (let i = 0; sudokuArray.length < size ** 2; i += 2) {\r\n    sudokuArray.push([]);\r\n    if (a % 3 === 0) {\r\n      b++;\r\n    }\r\n    for (let j = 0; j < size ** 2; j += 1) {\r\n      let k = startAgian(j + a + i + b, size ** 2);\r\n      sudokuArray[a].push(prefill[k]);\r\n    }\r\n    a++;\r\n  }\r\n  sortSudoku();\r\n}\r\n\r\nfunction sortSudoku() {\r\n  let itteration = Math.floor(Math.random() * 100 - 70) + 70;\r\n  for (let i = 0; i < itteration; i++) {\r\n    let rand = Math.floor(Math.random() * 3);\r\n    switch (rand) {\r\n      case 0:\r\n        transpose();\r\n        break;\r\n      case 1:\r\n        switchBigRow();\r\n        break;\r\n      case 2:\r\n        switchRow();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  voider();\r\n}\r\n\r\nfunction voider() {\r\n  let counter = 0;\r\n  let c = difficult * 3;\r\n  sudokuAns = sudokuArray.map((row) =>\r\n    row.map((cell, i) => {\r\n      if (Math.random() > 1 - difficult / 100 && counter < c) {\r\n        size === 4 ? counter++ : (counter += 3);\r\n        return 0;\r\n      }\r\n      return cell;\r\n    })\r\n  );\r\n}\r\n\r\nfunction transpose() {\r\n  let memArray = sudokuArray[0].map((col, i) => sudokuArray.map((row) => row[i]));\r\n  sudokuArray = memArray;\r\n}\r\n\r\nfunction switchRow() {\r\n  let firstRowArray = [];\r\n  let a = Math.floor(Math.random() * size);\r\n  let diff = Math.floor(Math.random() * (size - 1)) + 1;\r\n  for (let i = 0; i < size ** 2; i += 3) {\r\n    firstRowArray.push(i);\r\n  }\r\n  let memRow = sudokuArray[firstRowArray[a]];\r\n  sudokuArray[firstRowArray[a]] = sudokuArray[firstRowArray[a] + diff];\r\n  sudokuArray[firstRowArray[a] + diff] = memRow;\r\n}\r\n\r\nfunction switchBigRow() {\r\n  let firstRowArray = [];\r\n  let a = Math.floor(Math.random() * size);\r\n  for (let i = 0; i < size ** 2; i += 3) {\r\n    firstRowArray.push(i);\r\n  }\r\n  for (let j = 0; j < size; j++) {\r\n    let memRow = sudokuArray[j];\r\n    sudokuArray[j] = sudokuArray[firstRowArray[a] + j];\r\n    sudokuArray[firstRowArray[a] + j] = memRow;\r\n  }\r\n}\r\n\r\nfunction startAgian(number, size) {\r\n  if (number >= size) {\r\n    return number % size;\r\n  }\r\n  return number;\r\n}\r\n\r\n\r\nexport { sudokuArray, sudokuAns, createSudoku };\r\n","import React, { useContext, useState } from \"react\";\r\nlet timeTime = null;\r\nconst config = {\r\n  sound: false,\r\n  soundVolume: 30,\r\n  music: false,\r\n  musicVolume: 30,\r\n  size: \"3\",\r\n  difficult: \"55\",\r\n  color: 'green',\r\n  backgr: \"1\",\r\n  timer: '00 : 00',\r\n  timerOn: false,\r\n  load: false\r\n};\r\n\r\nconst ConfigContext = React.createContext();\r\n\r\nexport const useConfig = () => {\r\n  return useContext(ConfigContext);\r\n};\r\n\r\nexport const ConfigProvider = ({ children }) => {\r\n  const [soundVolume, setSoundVolume] = useState(config.soundVolume);\r\n  const [musicVolume, setMusicVolume] = useState(config.musicVolume);\r\n  const [timerOn, setTimerOn] = useState(config.timerOn);\r\n  const [timer, setTimer] = useState(config.timer);\r\n  const [size, setSize] = useState(config.size);\r\n  const [difficult, setDifficult] = useState(config.difficult);\r\n  const [color, setColor] = useState(config.color);\r\n  const [backgr, setBackgr] = useState(config.backgr);\r\n  const [load, setLoad] = useState(config.load)\r\n\r\n  const soundHandler = (sound) => {\r\n    sound.volume = soundVolume / 100;\r\n    sound.play();\r\n  };\r\n\r\n  const musicHandler = (music) => {\r\n    music.load();\r\n    music.volume = musicVolume / 100;\r\n    music.play();\r\n  };\r\n\r\n  let time;\r\n  \r\n  function theTimer() {\r\n  clearInterval(timeTime); \r\n  var min = 0;\r\n  var sec = 0;\r\n  \"min\" in localStorage ? (min = JSON.parse(localStorage.min)) : (min = 0);\r\n  \"sec\" in localStorage ? (sec = JSON.parse(localStorage.sec)) : (sec = 0);\r\n  timeTime = setInterval(() => {\r\n    sec++;\r\n    localStorage.sec = JSON.stringify(sec);\r\n    if (min < 10) {\r\n      if (sec < 10) {\r\n        time = `0${min} : 0${sec}`;\r\n      } else {\r\n        time = `0${min} : ${sec}`;\r\n      }\r\n    } else {\r\n      if (sec < 10) {\r\n        time = `${min} : 0${sec}`;\r\n      } else {\r\n        time = `${min} : ${sec}`;\r\n      }\r\n    }\r\n    if (sec == 60) {\r\n      min++;\r\n      \r\n      localStorage.min = JSON.stringify(min);\r\n      sec = 0;\r\n    }\r\n    setTimer(time)\r\n  }, 1000);\r\n}\r\n\r\n  return (\r\n    <ConfigContext.Provider\r\n      value={{\r\n        soundVolume,\r\n        soundHandler,\r\n        musicVolume,\r\n        musicHandler,\r\n        setTimer,\r\n        setSoundVolume,\r\n        timer,\r\n        setMusicVolume,\r\n        size,\r\n        setSize,\r\n        difficult,\r\n        setDifficult,\r\n        color,\r\n        setColor,\r\n        backgr,\r\n        setBackgr,\r\n        timerOn, \r\n        setTimerOn,\r\n        theTimer,\r\n        load, \r\n        setLoad\r\n      }}\r\n    >\r\n      {children}\r\n    </ConfigContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ConfigProvider;\r\n","// import react from \"react\";\r\nimport { createSudoku } from \"../game/algorithm\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./main.css\";\r\nimport { useConfig } from \"../game/config\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport { green, yellow, blue, red } from '@material-ui/core/colors'\r\n\r\nexport default function Main() {\r\n  const config = useConfig();\r\n  function clickMainHndlr() {\r\n    createSudoku(config.size, config.difficult);\r\n    localStorage.removeItem(\"ans\");\r\n    localStorage.removeItem(\"min\");\r\n    localStorage.removeItem(\"sec\");\r\n    config.theTimer()\r\n  }\r\n  function clickLoadHndlr() {\r\n    config.setLoad(true)\r\n    config.theTimer()\r\n  }\r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      primary: config.color === 'green' ? green : config.color === 'red' ? red:config.color === 'blue' ? blue: yellow,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div className=\"main-field\">\r\n      <Link className='main-link' to={'ans'in localStorage ? \"/game\" : '/'}>\r\n        <ThemeProvider theme={theme}>\r\n        <Button variant='contained' color='primary' onClick={clickLoadHndlr} disabled={'ans'in localStorage? false : true}>Load game</Button>\r\n        </ThemeProvider>\r\n      </Link>\r\n      <Link className='main-link' to={\"/game\"}>\r\n      <ThemeProvider theme={theme}>\r\n        <Button variant='contained' color='primary' onClick={clickMainHndlr}>New game</Button>\r\n        </ThemeProvider>\r\n      </Link>\r\n      <Link className='main-link' to={\"/score\"}>\r\n      <ThemeProvider theme={theme}>\r\n        <Button variant='contained' color='primary' >Score</Button>\r\n        </ThemeProvider>\r\n      </Link>\r\n      <Link className='main-link' to={\"/settings\"}>\r\n      <ThemeProvider theme={theme}>\r\n        <Button variant='contained' color='primary'>Settings</Button>\r\n        </ThemeProvider>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/win.76921b77.mp3\";","import { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./popup.css\";\r\nimport { time } from \"../game/field\";\r\nimport { useConfig } from \"../game/config\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { createMuiTheme, withStyles, makeStyles, ThemeProvider } from '@material-ui/core/styles';\r\nimport { green, yellow, blue, red } from '@material-ui/core/colors'\r\nimport wnSound from \"../sounds/win.mp3\"\r\n\r\n\r\nexport default function Popup() {\r\n  const winSound = new Audio();\r\n  winSound.src = wnSound;\r\n  \r\n  const [name, setName] = useState(\"Unknown\");\r\n  const config = useConfig();\r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      primary: config.color === 'green' ? green : config.color === 'red' ? red:config.color === 'blue' ? blue: yellow,\r\n    },\r\n  });\r\n  function toTheRecord() {\r\n    let score = JSON.parse(localStorage.score);\r\n    let winner = {\r\n      name,\r\n      time: config.timer,\r\n      size: config.size === 3 ? \"3x3\" : \"4x4\",\r\n      diff: config.difficult === \"45\" ? \"easy\" : config.difficult === \"55\" ? \"normal\" : \"hard\",\r\n    };\r\n    score.push(winner);\r\n    let a = score.sort(function (a, b) {\r\n      if (a.time > b.time) {\r\n        return 1;\r\n      }\r\n      if (a.time < b.time) {\r\n        return -1;\r\n      }\r\n      return 0;\r\n    });\r\n\r\n    localStorage.score = JSON.stringify(a);\r\n  }\r\n\r\n  function nameHandler(event) {\r\n    setName(event.target.value);\r\n  }\r\n\r\n  config.soundHandler(winSound)\r\n  return (\r\n    <div className=\"popup-container\">\r\n     <p>CONGRATULATION!!!</p> \r\n     <p>YOU WIN</p> \r\n       \r\n      <form>\r\n        <label className='popup-label'>Enter your name:</label>\r\n        <input className='popup-input' onChange={nameHandler} />\r\n        <Link className='popup-link'  to={\"/\"} onClick={toTheRecord}>\r\n        <ThemeProvider theme={theme}>\r\n        <Button variant='contained' color='primary'>Submit</Button>\r\n        </ThemeProvider>\r\n        </Link>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/bckgrnd.2ae147ec.mp3\";","export default __webpack_public_path__ + \"static/media/err.98dac69e.mp3\";","export default __webpack_public_path__ + \"static/media/backgr1.70a3c98a.jpg\";","export default __webpack_public_path__ + \"static/media/backgr2.dc212c50.jpg\";","export default __webpack_public_path__ + \"static/media/backgr3.1e8c157d.jpg\";","import { useConfig } from \"../game/config\";\r\n// import { useEffect, useState } from \"react\";\r\n\r\nexport default function Time(){\r\n    const config = useConfig();\r\n    \r\n    return <div className='timer'>\r\n        TIME\r\n        <br/>\r\n        {config.timer}\r\n    </div>\r\n}","import { useEffect, useState } from \"react\";\r\nimport \"./field.css\";\r\nimport { sudokuArray, sudokuAns } from \"./algorithm\";\r\nimport Popup from \"../popup/popup\";\r\nimport { useConfig } from \"./config\";\r\nimport bckgrSnd from \"../sounds/bckgrnd.mp3\";\r\nimport erSound from \"../sounds/err.mp3\"\r\nimport Button from '@material-ui/core/Button';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport { green, yellow, blue, red } from '@material-ui/core/colors'\r\nimport bckgr1 from '../assets/backgr1.jpg'\r\nimport bckgr2 from '../assets/backgr2.jpg'\r\nimport bckgr3 from '../assets/backgr3.jpg'\r\nimport Time from \"./time\";\r\n\r\nlet ans = [];\r\n\r\nconst bckgrSound = new Audio();\r\nbckgrSound.src = bckgrSnd;\r\nconst errSound = new Audio();\r\nerrSound.src = erSound;\r\n\r\n\r\nexport default function Field() {\r\n  const config = useConfig();\r\n  const [col, setCol] = useState(0);\r\n  const [rw, setRw] = useState(0);\r\n  const [win, setWin] = useState(false);\r\n  \r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      primary: config.color === 'green' ? green : config.color === 'red' ? red:config.color === 'blue' ? blue: yellow,\r\n    },\r\n  });\r\n\r\n  const backgroundStyle ={\r\n    backgroundImage: `url(${config.backgr === '1' ? bckgr1 :config.backgr === '2' ? bckgr2 : bckgr3})`,\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: \"center\",\r\n    width: \"100vw\",\r\n    height: \"86vh\",\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n  }\r\n\r\n  \r\n  const styles ={\r\n    sudokuCell: {\r\n      width: config.size === '4' ? 35 : 60,\r\n      height: config.size === '4' ? 35 : 60,\r\n      fontSize: config.size === '4' ? 22  : 50,\r\n      border: `1px solid ${config.color}`\r\n    },\r\n    inputCell: {\r\n      width: config.size === '4' ? 30: 50,\r\n      height: config.size === '4' ? 30 : 50,\r\n      fontSize: config.size === '4' ? 22 : 50,\r\n      \r\n    },\r\n  };\r\n  \r\n  function clickHandler(row, column) {\r\n    setCol(column);\r\n    setRw(row);\r\n  }\r\n  \r\n  function inputHandler(event) {\r\n    if (event.target.value.length > 1) {\r\n      event.target.value = event.target.value.substr(0, 1);\r\n    }\r\n    ans[rw][col] = event.target.value;\r\n    localStorage.ans = JSON.stringify(ans);\r\n  }\r\n\r\n  function checkSudoku() {\r\n    for (let i = 0; i < sudokuAns.length; i++) {\r\n      for (let j = 0; j < sudokuAns[i].length; j++) {\r\n        if (sudokuArray[i][j] !== ans[i][j]) {\r\n          config.soundHandler(errSound)\r\n          return setWin(false);\r\n        }\r\n      }\r\n    }\r\n    return setWin(true);\r\n  }\r\n  let retArr = [];\r\n  if (\"ans\" in localStorage && config.load) {\r\n    config.setLoad(false)\r\n    retArr = JSON.parse(localStorage.ans);\r\n  } else {\r\n    retArr = sudokuAns;\r\n  }\r\n  useEffect(()=>{\r\n    config.musicHandler(bckgrSound);\r\n  },[])\r\n \r\n  return (\r\n    <div style={backgroundStyle}>\r\n<div className=\"game-container\" style={backgroundStyle}>\r\n      <div className='sudoku-container'>\r\n      <table className=\"game-table\">\r\n        <tbody className=\"game-field\">\r\n          {retArr.map((row, ind) => {\r\n            if (ans.length < config.size ** 2) {\r\n              ans.push([]);\r\n            }\r\n            return (\r\n              <tr className=\"sudoku-row\" key={ind}>\r\n                {row.map((cell, index) => {\r\n                  if (ans[ind].length < config.size ** 2) {\r\n                    ans[ind].push(cell);\r\n                  }\r\n                  return cell === 0 ? (\r\n                    <td style={styles.sudokuCell} key={index}>\r\n                      <input\r\n                        className=\"input-field\"\r\n                        style={styles.inputCell}\r\n                        type=\"text\"\r\n                        onChange={inputHandler}\r\n                        onClick={clickHandler.bind(this, ind, index)}\r\n                      />\r\n                    </td>\r\n                  ) : (\r\n                    <td style={styles.sudokuCell} key={index}>\r\n                      {cell}\r\n                    </td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      </div>\r\n      {win ? <Popup /> : null}\r\n          <div className='control-container'>\r\n          <Time className='timer'/>\r\n          <ThemeProvider theme={theme}>\r\n        <Button variant='contained' color='primary' onClick={checkSudoku} >Check Sudoku</Button>\r\n        </ThemeProvider>\r\n          </div>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./header.css\";\r\nimport React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { createSudoku } from \"../game/algorithm\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport List from \"@material-ui/core/List\";\r\nimport MenuOpenIcon from \"@material-ui/icons/MenuOpen\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ReceiptIcon from \"@material-ui/icons/Receipt\";\r\nimport FiberNewIcon from \"@material-ui/icons/FiberNew\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { theTimer } from \"../game/field\";\r\nimport { useConfig } from \"../game/config\";\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 400,\r\n    textDecoration: 'none'\r\n  },\r\n  fullList: {\r\n    width: \"auto\",\r\n    \r\n  },\r\n});\r\n\r\nexport default function Header() {\r\n  const classes = useStyles();\r\n  const config = useConfig();\r\n  const [state, setState] = React.useState({\r\n    top: false,\r\n  });\r\n\r\n  function clickHandlr() {\r\n    createSudoku(config.size, config.difficult);\r\n    localStorage.removeItem(\"ans\");\r\n    localStorage.removeItem(\"min\");\r\n    localStorage.removeItem(\"sec\");\r\n    config.theTimer()\r\n    config.setTimer('00 : 00')\r\n  }\r\n  const headerStyle = {\r\n      backgroundColor: config.color\r\n  }\r\n\r\n    const toggleDrawer = (anchor, open) => (event) => {\r\n    if (event.type === \"keydown\" && (event.key === \"Tab\" || event.key === \"Shift\")) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n\r\n  const list = (anchor) => (\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === \"top\" || anchor === \"bottom\",\r\n      })}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <List>\r\n        {[\"Main menu\", \"New Game\", \"Settings\", \"Score\"].map((text, index) => (\r\n          <NavLink\r\n            to={index === 1 ? \"/game\" : index === 2 ? \"/settings\" : index === 0 ? \"/\" : \"/score\"}\r\n            onClick={index === 1 ? clickHandlr : false}\r\n          >\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>\r\n                {index === 1 ? (\r\n                  <FiberNewIcon />\r\n                ) : index === 2 ? (\r\n                  <SettingsIcon />\r\n                ) : index === 0 ? (\r\n                  <MenuOpenIcon />\r\n                ) : (\r\n                  <ReceiptIcon />\r\n                )}\r\n              </ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          </NavLink>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className={`header-container`} style={headerStyle}>\r\n      {\r\n        <React.Fragment>\r\n          <div className='header-title'>SUDOKU</div>\r\n          <Button className='header-menu' onClick={toggleDrawer(\"top\", true)}>\r\n            <MenuIcon />\r\n            <p>MENU</p>\r\n          </Button>\r\n          <Drawer anchor={\"top\"} open={state[\"top\"]} onClose={toggleDrawer(\"top\", false)}>\r\n            {list(\"top\")}\r\n          </Drawer>\r\n        </React.Fragment>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/rs_school_js.ad178c0d.svg\";","import React from \"react\";\r\nimport \"./footer.css\";\r\nimport Rslogo from \"./rs_school_js.svg\";\r\n\r\nexport default (props) => (\r\n  <footer>\r\n    <div className=\"footerauthor\">\r\n      <p>\r\n        <a href=\"https://github.com/Vepsar\">Vepsar</a>\r\n      </p>\r\n    </div>\r\n    <div className=\"svg\">\r\n      <img src={Rslogo}></img>\r\n    </div>\r\n    <div className=\"rslink\">\r\n      <a href=\"https://rs.school/js/\">RS.School</a>\r\n    </div>\r\n  </footer>\r\n);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport VolumeDown from \"@material-ui/icons/VolumeDown\";\r\nimport VolumeUp from \"@material-ui/icons/VolumeUp\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport { useConfig } from \"../game/config\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { createSudoku } from \"../game/algorithm\";\r\nimport '../settings/setings.css'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 500,\r\n    alignItems: 'center'\r\n  },\r\n});\r\n\r\nexport default function Settings() {\r\n  const classes = useStyles();\r\n  const config = useConfig();\r\n\r\n  function clickHandlr() {\r\n    createSudoku(config.size, config.difficult);\r\n    localStorage.removeItem(\"ans\");\r\n    localStorage.removeItem(\"min\");\r\n    localStorage.removeItem(\"sec\");\r\n    config.theTimer();\r\n  }\r\n\r\n  const handleMusicChange = (event, newValue) => {\r\n    config.setMusicVolume(newValue);\r\n  };\r\n  const handleSoundChange = (event, newValue) => {\r\n    config.setSoundVolume(newValue);\r\n  };\r\n\r\n  const handleRadioSizeChange = (event) => {\r\n    config.setSize(event.target.value);\r\n  };\r\n  const handleRadioDiffChange = (event) => {\r\n    config.setDifficult(event.target.value);\r\n  };\r\n  const handleRadioColorChange = (event) => {\r\n    config.setColor(event.target.value);\r\n  };\r\n  const handleRadioBackgrChange = (event) => {\r\n    config.setBackgr(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={`${classes.root} settings-container`}>\r\n      <FormControl component=\"fieldset\">\r\n        <Typography id=\"continuous-slider\" gutterBottom>\r\n          Select size\r\n        </Typography>\r\n        <RadioGroup row aria-label=\"gender\" name=\"gender1\" value={config.size} onChange={handleRadioSizeChange}>\r\n          <FormControlLabel value=\"3\" control={<Radio />} label=\"3x3\" />\r\n          <FormControlLabel value=\"4\" control={<Radio />} label=\"4x4\" />\r\n        </RadioGroup>\r\n      </FormControl>\r\n      <FormControl component=\"fieldset\">\r\n        <Typography id=\"continuous-slider\" gutterBottom>\r\n          Select difficult\r\n        </Typography>\r\n        <RadioGroup row className='radio-container' aria-label=\"gender\" name=\"gender1\" value={config.difficult} onChange={handleRadioDiffChange}>\r\n          <FormControlLabel value=\"45\" control={<Radio />} label=\"Easy\" />\r\n          <FormControlLabel value=\"55\" control={<Radio />} label=\"Normal\" />\r\n          <FormControlLabel value=\"70\" control={<Radio />} label=\"Hard\" />\r\n        </RadioGroup>\r\n      </FormControl>\r\n      <FormControl component=\"fieldset\">\r\n        <Typography id=\"continuous-slider\" gutterBottom>\r\n          Select color\r\n        </Typography>\r\n        <RadioGroup row aria-label=\"gender\" name=\"gender1\" value={config.color} onChange={handleRadioColorChange}>\r\n          <FormControlLabel color='red' value=\"red\" control={<Radio />} label=\"Red\" />\r\n          <FormControlLabel value=\"green\" control={<Radio />} label=\"Green\" />\r\n          <FormControlLabel value=\"blue\" control={<Radio />} label=\"Blue\" />\r\n          <FormControlLabel value=\"yellow\" control={<Radio />} label=\"Yellow\" />\r\n        </RadioGroup>\r\n      </FormControl>\r\n      <FormControl component=\"fieldset\">\r\n        <Typography id=\"continuous-slider\" gutterBottom>\r\n          Select background\r\n        </Typography>\r\n        <RadioGroup row aria-label=\"gender\" name=\"gender1\" value={config.backgr} onChange={handleRadioBackgrChange}>\r\n          <FormControlLabel value=\"1\" control={<Radio />} label=\"1\" />\r\n          <FormControlLabel value=\"2\" control={<Radio />} label=\"2\" />\r\n          <FormControlLabel value=\"3\" control={<Radio />} label=\"3\" />\r\n        </RadioGroup>\r\n      </FormControl>\r\n      <Typography id=\"continuous-slider\" gutterBottom>\r\n        Music Volume\r\n      </Typography>\r\n      <Grid container spacing={2}>\r\n        <Grid item>\r\n          <VolumeDown />\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Slider value={config.musicVolume} onChange={handleMusicChange} aria-labelledby=\"continuous-slider\" />\r\n        </Grid>\r\n        <Grid item>\r\n          <VolumeUp />\r\n        </Grid>\r\n      </Grid>\r\n      <Typography id=\"continuous-slider\" gutterBottom>\r\n        Sound Volume\r\n      </Typography>\r\n      <Grid container spacing={2}>\r\n        <Grid item>\r\n          <VolumeDown />\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Slider value={config.soundVolume} onChange={handleSoundChange} aria-labelledby=\"continuous-slider\" />\r\n        </Grid>\r\n        <Grid item>\r\n          <VolumeUp />\r\n        </Grid>\r\n      </Grid>\r\n      <Link to=\"/game\" onClick={clickHandlr}>\r\n        <button>Save</button>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n","const scoreboard = [\r\n  {\r\n    name: \"Stanley\",\r\n    time: \"01:10\",\r\n\r\n    size: \"3x3\",\r\n    diff: \"easy\",\r\n  },\r\n  {\r\n    name: \"Stanford\",\r\n    time: \"03:30\",\r\n\r\n    size: \"4x4\",\r\n    diff: \"hard\",\r\n  },\r\n  {\r\n    name: \"Dipper\",\r\n    time: \"03:40\",\r\n\r\n    size: \"4x4\",\r\n    diff: \"hard\",\r\n  },\r\n  {\r\n    name: \"Mable\",\r\n    time: \"05:14\",\r\n\r\n    size: \"3x3\",\r\n    diff: \"easy\",\r\n  },\r\n  {\r\n    name: \"Soos\",\r\n    time: \"06:10\",\r\n\r\n    size: \"3x3\",\r\n    diff: \"easy\",\r\n  },\r\n  {\r\n    name: \"Wendy\",\r\n    time: \"06:12\",\r\n\r\n    size: \"4x4\",\r\n    diff: \"easy\",\r\n  },\r\n  {\r\n    name: \"Grenda\",\r\n    time: \"10:12\",\r\n\r\n    size: \"3x3\",\r\n\r\n    diff: \"easy\",\r\n  },\r\n  {\r\n    name: \"Bill\",\r\n    time: \"01:01\",\r\n    size: \"4x4\",\r\n    diff: \"easy\",\r\n  },\r\n  {\r\n    name: \"Fiddleford\",\r\n    time: \"11:13\",\r\n    size: \"4x4\",\r\n    diff: \"easy\",\r\n  },\r\n  {\r\n    name: \"Shmebulock\",\r\n    time: \"21:11\",\r\n\r\n    size: \"3x3\",\r\n    diff: \"easy\",\r\n  },\r\n  {\r\n    name: \"Custumer\",\r\n    time: \"31:13\",\r\n\r\n    size: \"3x3\",\r\n    diff: \"easy\",\r\n  },\r\n];\r\n\r\nexport default scoreboard;\r\n","import scoreboard from \"./scoretable\";\r\nimport './score.css'\r\nimport { useConfig } from \"../game/config\";\r\n\r\nscoreboard.sort(function (a, b) {\r\n  if (a.time > b.time) {\r\n    return 1;\r\n  }\r\n  if (a.time < b.time) {\r\n    return -1;\r\n  }\r\n  return 0;\r\n});\r\nlet scrbrd\r\nif('score' in localStorage){\r\n  scrbrd = JSON.parse(localStorage.score);\r\n} else {\r\n  scrbrd = scoreboard\r\n}\r\nexport default function Settings() {\r\n  const config = useConfig();\r\n  const style = {\r\n    border: `1px solid ${config.color}` ,\r\n    width: 200,\r\n    \r\n}\r\n  const ts={\r\n    fontSize:30\r\n  }\r\n  return (\r\n    <div className=\"score-container\">\r\n      <p style={ts}>LEADERBOARD</p>\r\n      <table >\r\n        <thead>\r\n          <th>NAME</th>\r\n          <th>TIME</th>\r\n          <th>SIZE</th>\r\n          <th>DIFFICULT</th>\r\n        </thead>\r\n        <tbody>\r\n          {scrbrd.map((cell) => {\r\n            return (\r\n              <tr>\r\n                <td style={style}>{cell.name}</td>\r\n                <td style={style}>{cell.time}</td>\r\n                <td style={style}>{cell.size}</td>\r\n                <td style={style}>{cell.diff}</td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport react from \"react\";\nimport Main from \"./mainPage/main\";\nimport Header from \"./header/header\";\nimport Footer from \"./footer/footer\";\nimport Field from \"./game/field\";\nimport Settings from \"./settings/settings\";\nimport Score from \"./score/score\";\n\nimport { Route, Switch, HashRouter } from \"react-router-dom\";\nimport ConfigProvider from \"./game/config\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HashRouter  basename=\"/\">\n        <ConfigProvider>\n          <Header />\n          <Switch>\n            <Route path=\"/\" exact component={Main} />\n            <Route path=\"/game\" exact component={Field} />\n            <Route path=\"/settings\" exact component={Settings} />\n            <Route path=\"/score\" exact component={Score} />\n          </Switch>\n          <Footer />\n        </ConfigProvider>\n      </HashRouter>\n      \n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst application = (\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);\n\nReactDOM.render(application, document.getElementById(\"root\"));\n"],"sourceRoot":""}