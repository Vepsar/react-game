{"version":3,"sources":["game/algorithm.js","popup/popup.js","game/config.js","game/field.js","mainPage/main.js","header/header.js","footer/rs_school_js.svg","footer/footer.js","settings/settings.js","score/scoretable.js","score/score.js","App.js","index.js"],"names":["size","difficult","sudokuArray","sudokuAns","createSudoku","s","d","parseInt","prefill","Array","keys","map","x","String","fromCharCode","toString","a","b","i","length","push","j","k","startAgian","itteration","Math","floor","random","transpose","switchBigRow","switchRow","counter","row","cell","voider","sortSudoku","createBasicSudoku","memArray","col","firstRowArray","diff","memRow","number","Popup","useState","name","setName","className","onChange","event","target","value","to","onClick","console","log","type","config","ConfigContext","React","createContext","useConfig","useContext","ConfigProvider","children","soundVolume","setSoundVolume","musicVolume","setMusicVolume","sound","setSound","music","setMusic","setSize","setDifficult","color","setColor","backgr","setBackgr","Provider","ans","Field","setCol","rw","setRw","win","setWin","clickHandler","column","inputHandler","substr","ind","index","bind","Main","useStyles","makeStyles","list","width","fullList","Header","classes","top","state","setState","clickHandlr","anchor","toggleDrawer","open","key","Fragment","Button","Drawer","onClose","clsx","role","onKeyDown","List","text","ListItem","button","ListItemIcon","ListItemText","primary","props","href","src","Rslogo","root","Settings","FormControl","component","Typography","id","gutterBottom","RadioGroup","aria-label","FormControlLabel","control","Radio","label","Grid","container","spacing","item","xs","Slider","newValue","aria-labelledby","scoreboard","time","App","basename","path","exact","Score","application","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fca1af76.chunk.js","sourcesContent":["let sudokuArray = [],\r\n  sudokuAns = [];\r\n\r\nlet size, difficult;\r\n\r\nfunction createSudoku(s, d) {\r\n  size = parseInt(s, 10);\r\n  difficult = parseInt(d, 10);\r\n  createBasicSudoku();\r\n}\r\n\r\nfunction createBasicSudoku() {\r\n  let prefill = [...Array(size ** 2).keys()].map((x) => {\r\n    x++;\r\n    if (x > 9) {\r\n      return String.fromCharCode(x + 55);\r\n    }\r\n    return x.toString();\r\n  });\r\n  let a = 0,\r\n    b = -1;\r\n  for (let i = 0; sudokuArray.length < size ** 2; i += 2) {\r\n    sudokuArray.push([]);\r\n    if (a % 3 === 0) {\r\n      b++;\r\n    }\r\n    for (let j = 0; j < size ** 2; j += 1) {\r\n      let k = startAgian(j + a + i + b, size ** 2);\r\n      sudokuArray[a].push(prefill[k]);\r\n    }\r\n    a++;\r\n  }\r\n  sortSudoku();\r\n}\r\n\r\nfunction sortSudoku() {\r\n  let itteration = Math.floor(Math.random() * 100 - 70) + 70;\r\n  for (let i = 0; i < itteration; i++) {\r\n    let rand = Math.floor(Math.random() * 3);\r\n    switch (rand) {\r\n      case 0:\r\n        transpose();\r\n        break;\r\n      case 1:\r\n        switchBigRow();\r\n        break;\r\n      case 2:\r\n        switchRow();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  voider();\r\n}\r\n\r\nfunction voider() {\r\n  let counter = 0;\r\n  sudokuAns = sudokuArray.map((row) =>\r\n    row.map((cell, i) => {\r\n      if (Math.random() > 1 - difficult / 100 && counter < difficult) {\r\n        counter++;\r\n        return 0;\r\n      }\r\n      return cell;\r\n    })\r\n  );\r\n}\r\n\r\nfunction transpose() {\r\n  let memArray = sudokuArray[0].map((col, i) => sudokuArray.map((row) => row[i]));\r\n  sudokuArray = memArray;\r\n}\r\n\r\nfunction switchRow() {\r\n  let firstRowArray = [];\r\n  let a = Math.floor(Math.random() * size);\r\n  let diff = Math.floor(Math.random() * (size - 1)) + 1;\r\n  for (let i = 0; i < size ** 2; i += 3) {\r\n    firstRowArray.push(i);\r\n  }\r\n  let memRow = sudokuArray[firstRowArray[a]];\r\n  sudokuArray[firstRowArray[a]] = sudokuArray[firstRowArray[a] + diff];\r\n  sudokuArray[firstRowArray[a] + diff] = memRow;\r\n}\r\n\r\nfunction switchBigRow() {\r\n  let firstRowArray = [];\r\n  let a = Math.floor(Math.random() * size);\r\n  for (let i = 0; i < size ** 2; i += 3) {\r\n    firstRowArray.push(i);\r\n  }\r\n  for (let j = 0; j < size; j++) {\r\n    let memRow = sudokuArray[j];\r\n    sudokuArray[j] = sudokuArray[firstRowArray[a] + j];\r\n    sudokuArray[firstRowArray[a] + j] = memRow;\r\n  }\r\n}\r\n\r\nfunction startAgian(number, size) {\r\n  if (number >= size) {\r\n    return number % size;\r\n  }\r\n  return number;\r\n}\r\n\r\n// createBasicSudoku();\r\n\r\nexport { sudokuArray, sudokuAns, createSudoku };\r\n","import { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./popup.css\";\r\nimport { timerValue } from \"../game/field\";\r\n\r\nexport default function Popup() {\r\n  const [name, setName] = useState(\"Unknown\");\r\n\r\n  function toTheRecord() {\r\n    console.log(name);\r\n  }\r\n\r\n  function nameHandler(event) {\r\n    setName(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <div className=\"popup-container\">\r\n      CONGRATULATION!!! YOU WIN\r\n      <form>\r\n        <label>Enter your name:</label>\r\n        <input onChange={nameHandler} />\r\n        <Link to={\"/\"} onClick={toTheRecord}>\r\n          <input type=\"submit\" value=\"Submit\" />\r\n        </Link>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useState } from \"react\";\r\nimport { difficult } from \"./algorithm\";\r\n\r\nconst config = {\r\n  sound: false,\r\n  soundVolume: 50,\r\n  music: false,\r\n  musicVolume: 50,\r\n  size: \"3\",\r\n  difficult: \"55\",\r\n  color: 1,\r\n  backgr: 1,\r\n};\r\n\r\nconst ConfigContext = React.createContext();\r\n\r\nexport const useConfig = () => {\r\n  return useContext(ConfigContext);\r\n};\r\n\r\nexport const ConfigProvider = ({ children }) => {\r\n  const [soundVolume, setSoundVolume] = useState(config.soundVolume);\r\n  const [musicVolume, setMusicVolume] = useState(config.musicVolume);\r\n  const [sound, setSound] = useState(config.sound);\r\n  const [music, setMusic] = useState(config.music);\r\n  const [size, setSize] = useState(config.size);\r\n  const [difficult, setDifficult] = useState(config.difficult);\r\n  const [color, setColor] = useState(config.color);\r\n  const [backgr, setBackgr] = useState(config.backgr);\r\n\r\n  // const soundVolumeHandler = (soundVolume) => {\r\n  //   setSoundVolume(soundVolume);\r\n  // };\r\n\r\n  // const musicVolumeHandler = (musicVolume) => {\r\n  //   setMusicVolume(musicVolume);\r\n  // };\r\n  // const soundHandler = (sound) => {\r\n  //   setSound(sound);\r\n  // };\r\n  // const musicHandler = (music) => {\r\n  //   setMusic(music);\r\n  // };\r\n  // const trackHandler = (track) => {\r\n  //   setTrack(track);\r\n  // };\r\n  // const speedHandler = (speed) => {\r\n  //   setSpeed(speed);\r\n  // };\r\n  // const mapHandler = (number) => {\r\n  //   setMap(number);\r\n  // };\r\n  // const skinHandler = (skin) => {\r\n  //   setSkin(skin);\r\n  // };\r\n  return (\r\n    <ConfigContext.Provider\r\n      value={{\r\n        soundVolume,\r\n        setSoundVolume,\r\n        musicVolume,\r\n        setMusicVolume,\r\n        sound,\r\n        setSound,\r\n        music,\r\n        setMusic,\r\n        size,\r\n        setSize,\r\n        difficult,\r\n        setDifficult,\r\n        color,\r\n        setColor,\r\n        backgr,\r\n        setBackgr,\r\n      }}\r\n    >\r\n      {children}\r\n    </ConfigContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ConfigProvider;\r\n","import { /*react,*/ useState, useEffect } from \"react\";\r\nimport \"./field.css\";\r\nimport { sudokuArray, sudokuAns } from \"./algorithm\";\r\nimport Popup from \"../popup/popup\";\r\nimport { useConfig } from \"./config\";\r\n\r\nlet ans = [];\r\nlet timerValue = null;\r\nexport default function Field() {\r\n  const [col, setCol] = useState(0);\r\n  const [rw, setRw] = useState(0);\r\n  const [win, setWin] = useState(false);\r\n  const config = useConfig();\r\n\r\n  function clickHandler(row, column) {\r\n    setCol(column);\r\n    setRw(row);\r\n  }\r\n\r\n  function inputHandler(event) {\r\n    if (event.target.value.length > 1) {\r\n      event.target.value = event.target.value.substr(0, 1);\r\n    }\r\n    ans[rw][col] = event.target.value;\r\n  }\r\n\r\n  function checkSudoku() {\r\n    for (let i = 0; i < sudokuAns.length; i++) {\r\n      for (let j = 0; j < sudokuAns[i].length; j++) {\r\n        if (sudokuArray[i][j] !== ans[i][j]) {\r\n          return setWin(false);\r\n        }\r\n      }\r\n    }\r\n    return setWin(true);\r\n  }\r\n\r\n  return (\r\n    <div className=\"game-container\">\r\n      {win ? <Popup /> : null}\r\n      <table className=\"game-table\">\r\n        <tbody className=\"game-field\">\r\n          {sudokuAns.map((row, ind) => {\r\n            // console.log(\"ind\", ind);\r\n            if (ans.length < config.size ** 2) {\r\n              ans.push([]);\r\n            }\r\n            return (\r\n              <tr className=\"sudoku-row\" key={ind}>\r\n                {row.map((cell, index) => {\r\n                  if (ans[ind].length < config.size ** 2) {\r\n                    ans[ind].push(cell);\r\n                  }\r\n                  return cell === 0 ? (\r\n                    <td key={index}>\r\n                      <input\r\n                        className=\"input-field\"\r\n                        type=\"text\"\r\n                        onChange={inputHandler}\r\n                        onClick={clickHandler.bind(this, ind, index)}\r\n                      />\r\n                    </td>\r\n                  ) : (\r\n                    <td key={index}>{cell}</td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n\r\n      <button onClick={checkSudoku}>Проверить</button>\r\n      <div className=\"timer\">00 : 00</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction theTimer() {\r\n  clearInterval(timerValue);\r\n  var min = 0;\r\n  var sec = 0;\r\n  const timmer = document.querySelector(\".timer\");\r\n  let time;\r\n  timerValue = setInterval(() => {\r\n    sec++;\r\n    if (min < 10) {\r\n      if (sec < 10) {\r\n        time = `0${min} : 0${sec}`;\r\n      } else {\r\n        time = `0${min} : ${sec}`;\r\n      }\r\n    } else {\r\n      if (sec < 10) {\r\n        time = `${min} : 0${sec}`;\r\n      } else {\r\n        time = `${min} : ${sec}`;\r\n      }\r\n    }\r\n    if (sec == 60) {\r\n      min++;\r\n      sec = 0;\r\n    }\r\n    timmer.textContent = time;\r\n  }, 1000);\r\n}\r\n\r\nexport { theTimer, timerValue };\r\n","// import react from \"react\";\r\nimport { createSudoku } from \"../game/algorithm\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./main.css\";\r\nimport { theTimer } from \"../game/field\";\r\nimport { useConfig } from \"../game/config\";\r\nexport default function Main() {\r\n  const config = useConfig();\r\n  function clickHndlr() {\r\n    createSudoku(config.size, config.difficult);\r\n    // theTimer();\r\n  }\r\n\r\n  return (\r\n    <div className=\"main-field\">\r\n      <Link to={\"/game\"}>\r\n        <button>Load game</button>\r\n      </Link>\r\n      <Link to={\"/game\"}>\r\n        <button onClick={clickHndlr}>New game</button>\r\n      </Link>\r\n      <Link to={\"/score\"}>\r\n        <button>Score</button>\r\n      </Link>\r\n      <Link to={\"/settings\"}>\r\n        <button>Settings</button>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n","// import react from \"react\";\r\nimport \"./header.css\";\r\n// export default function Header() {\r\n//   return <div className=\"header-container\">HEADER</div>;\r\n// }\r\n\r\nimport React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { createSudoku } from \"../game/algorithm\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport List from \"@material-ui/core/List\";\r\nimport MenuOpenIcon from \"@material-ui/icons/MenuOpen\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ReceiptIcon from \"@material-ui/icons/Receipt\";\r\nimport FiberNewIcon from \"@material-ui/icons/FiberNew\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { theTimer } from \"../game/field\";\r\nimport { useConfig } from \"../game/config\";\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 400,\r\n  },\r\n  fullList: {\r\n    width: \"auto\",\r\n  },\r\n});\r\n\r\nexport default function Header() {\r\n  const classes = useStyles();\r\n  const config = useConfig();\r\n  const [state, setState] = React.useState({\r\n    top: false,\r\n  });\r\n\r\n  function clickHandlr() {\r\n    createSudoku(config.size, config.difficult);\r\n    // theTimer();\r\n  }\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (event.type === \"keydown\" && (event.key === \"Tab\" || event.key === \"Shift\")) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const list = (anchor) => (\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === \"top\" || anchor === \"bottom\",\r\n      })}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <List>\r\n        {[\"Main menu\", \"New Game\", \"Settings\", \"Score\"].map((text, index) => (\r\n          <NavLink\r\n            to={index === 1 ? \"/game\" : index === 2 ? \"/settings\" : index === 0 ? \"/\" : \"/score\"}\r\n            onClick={index === 1 ? clickHandlr : false}\r\n          >\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>\r\n                {index === 1 ? (\r\n                  <FiberNewIcon />\r\n                ) : index === 2 ? (\r\n                  <SettingsIcon />\r\n                ) : index === 0 ? (\r\n                  <MenuOpenIcon />\r\n                ) : (\r\n                  <ReceiptIcon />\r\n                )}\r\n              </ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          </NavLink>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"header-container\">\r\n      {\r\n        <React.Fragment>\r\n          <Button onClick={toggleDrawer(\"top\", true)}>\r\n            <MenuIcon />\r\n            MENU\r\n          </Button>\r\n          <Drawer anchor={\"top\"} open={state[\"top\"]} onClose={toggleDrawer(\"top\", false)}>\r\n            {list(\"top\")}\r\n          </Drawer>\r\n        </React.Fragment>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/rs_school_js.ad178c0d.svg\";","import React from \"react\";\r\nimport \"./footer.css\";\r\nimport Rslogo from \"./rs_school_js.svg\";\r\n\r\nexport default (props) => (\r\n  <footer>\r\n    <div className=\"footerauthor\">\r\n      <p>\r\n        <a href=\"https://github.com/Vepsar\">Vepsar</a>\r\n      </p>\r\n    </div>\r\n    <div className=\"svg\">\r\n      <img src={Rslogo}></img>\r\n    </div>\r\n    <div className=\"rslink\">\r\n      <a href=\"https://rs.school/js/\">RS.School</a>\r\n    </div>\r\n  </footer>\r\n);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport VolumeDown from \"@material-ui/icons/VolumeDown\";\r\nimport VolumeUp from \"@material-ui/icons/VolumeUp\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport { useConfig } from \"../game/config\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { createSudoku } from \"../game/algorithm\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 200,\r\n  },\r\n});\r\n\r\nexport default function Settings() {\r\n  const classes = useStyles();\r\n  const config = useConfig();\r\n\r\n  function clickHandlr() {\r\n    createSudoku(config.size, config.difficult);\r\n    // theTimer();\r\n  }\r\n\r\n  const handleMusicChange = (event, newValue) => {\r\n    config.setMusicVolume(newValue);\r\n  };\r\n  const handleSoundChange = (event, newValue) => {\r\n    config.setSoundVolume(newValue);\r\n  };\r\n\r\n  const handleRadioSizeChange = (event) => {\r\n    config.setSize(event.target.value);\r\n  };\r\n  const handleRadioDiffChange = (event) => {\r\n    config.setDifficult(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <FormControl component=\"fieldset\">\r\n        <Typography id=\"continuous-slider\" gutterBottom>\r\n          Select size\r\n        </Typography>\r\n        <RadioGroup aria-label=\"gender\" name=\"gender1\" value={config.size} onChange={handleRadioSizeChange}>\r\n          <FormControlLabel value=\"2\" control={<Radio />} label=\"2x2\" />\r\n          <FormControlLabel value=\"3\" control={<Radio />} label=\"3x3\" />\r\n          <FormControlLabel value=\"4\" control={<Radio />} label=\"4x4\" />\r\n        </RadioGroup>\r\n      </FormControl>\r\n      <FormControl component=\"fieldset\">\r\n        <Typography id=\"continuous-slider\" gutterBottom>\r\n          Select difficult\r\n        </Typography>\r\n        <RadioGroup aria-label=\"gender\" name=\"gender1\" value={config.difficult} onChange={handleRadioDiffChange}>\r\n          <FormControlLabel value=\"45\" control={<Radio />} label=\"Easy\" />\r\n          <FormControlLabel value=\"55\" control={<Radio />} label=\"Normal\" />\r\n          <FormControlLabel value=\"70\" control={<Radio />} label=\"Hard\" />\r\n        </RadioGroup>\r\n      </FormControl>\r\n      <Typography id=\"continuous-slider\" gutterBottom>\r\n        Music Volume\r\n      </Typography>\r\n      <Grid container spacing={2}>\r\n        <Grid item>\r\n          <VolumeDown />\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Slider value={config.musicVolume} onChange={handleMusicChange} aria-labelledby=\"continuous-slider\" />\r\n        </Grid>\r\n        <Grid item>\r\n          <VolumeUp />\r\n        </Grid>\r\n      </Grid>\r\n      <Typography id=\"continuous-slider\" gutterBottom>\r\n        Sound Volume\r\n      </Typography>\r\n      <Grid container spacing={2}>\r\n        <Grid item>\r\n          <VolumeDown />\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Slider value={config.soundVolume} onChange={handleSoundChange} aria-labelledby=\"continuous-slider\" />\r\n        </Grid>\r\n        <Grid item>\r\n          <VolumeUp />\r\n        </Grid>\r\n      </Grid>\r\n      <Link to=\"/game\" onClick={clickHandlr}>\r\n        <button>Save</button>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n","const scoreboard = [\r\n  {\r\n    name: \"Stanley\",\r\n    time: \"01:10\",\r\n    size: \"3x3\",\r\n    diff: \"easy\",\r\n  },\r\n  {\r\n    name: \"Stanford\",\r\n    time: \"03:30\",\r\n    size: \"5x5\",\r\n    diff: \"hard\",\r\n  },\r\n  {\r\n    name: \"Dipper\",\r\n    time: \"03:40\",\r\n    size: \"5x5\",\r\n    diff: \"hard\",\r\n  },\r\n  {\r\n    name: \"Mable\",\r\n    time: \"01:14\",\r\n    size: \"3x3\",\r\n    diff: \"easy\",\r\n  },\r\n  {\r\n    name: \"Soos\",\r\n    time: \"01:10\",\r\n    size: \"3x3\",\r\n    diff: \"easy\",\r\n  },\r\n  {\r\n    name: \"Wendy\",\r\n    time: \"01:10\",\r\n    size: \"3x3\",\r\n    diff: \"easy\",\r\n  },\r\n  {\r\n    name: \"Grenda\",\r\n    time: \"01:10\",\r\n    size: \"3x3\",\r\n    diff: \"easy\",\r\n  },\r\n  {\r\n    name: \"Bill\",\r\n    time: \"01:10\",\r\n    size: \"3x3\",\r\n    diff: \"easy\",\r\n  },\r\n  {\r\n    name: \"Fiddleford\",\r\n    time: \"01:10\",\r\n    size: \"3x3\",\r\n    diff: \"easy\",\r\n  },\r\n  {\r\n    name: \"Shmebulock\",\r\n    time: \"01:10\",\r\n    size: \"3x3\",\r\n    diff: \"easy\",\r\n  },\r\n  {\r\n    name: \"Custumer\",\r\n    time: \"01:10\",\r\n    size: \"3x3\",\r\n    diff: \"easy\",\r\n  },\r\n];\r\n\r\nexport default scoreboard;\r\n","import scoreboard from \"./scoretable\";\r\nexport default function Settings() {\r\n  return (\r\n    <div className=\"score-contasiner\">\r\n      LEADERBOARD\r\n      <table>\r\n        <thead>\r\n          <th>NAME</th>\r\n          <th>TIME</th>\r\n          <th>SIZE</th>\r\n          <th>DIFFICULT</th>\r\n        </thead>\r\n        <tbody>\r\n          {scoreboard.map((cell) => {\r\n            return (\r\n              <tr>\r\n                <td>{cell.name}</td>\r\n                <td>{cell.time}</td>\r\n                <td>{cell.size}</td>\r\n                <td>{cell.diff}</td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport react from \"react\";\nimport Main from \"./mainPage/main\";\nimport Header from \"./header/header\";\nimport Footer from \"./footer/footer\";\nimport Field from \"./game/field\";\nimport Settings from \"./settings/settings\";\nimport Score from \"./score/score\";\n\nimport { Route, Switch, Redirect, HashRouter } from \"react-router-dom\";\nimport ConfigProvider from \"./game/config\";\n// import sudokuArray from \"./game/algorithm.js\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HashRouter basename=\"/\">\n        <ConfigProvider>\n          <Header />\n          <Switch>\n            <Route path=\"/\" exact component={Main} />\n            <Route path=\"/game\" exact component={Field} />\n            <Route path=\"/settings\" exact component={Settings} />\n            <Route path=\"/score\" exact component={Score} />\n          </Switch>\n          <Footer />\n        </ConfigProvider>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst application = (\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);\n\nReactDOM.render(application, document.getElementById(\"root\"));\n"],"sourceRoot":""}